{"version":3,"sources":["Components/Searchbar/Searchbar.module.css","Components/ImageGalleryItem/ImageGalleryItem.module.css","Components/Modal/Modal.module.css","Components/ImageGallery/ImageGallery.module.css","Components/Button/Button.module.css","Components/App/App.module.css","Components/Searchbar/Searchbar.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/ImageGallery/ImageGallery.js","services/images-api.js","Components/Button/Button.js","Components/Loader/Loader.js","Components/Modal/Modal.js","Components/App/App.js","index.js"],"names":["module","exports","Searchbar","state","search","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","className","s","this","SearchForm","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","name","onChange","Component","ImageGalleryItem","image","openModal","webformatURL","tags","id","onClick","src","alt","ImageGalleryItemImage","ImageGallery","images","map","key","fetchImages","query","pageNumber","fetch","then","x","Promise","resolve","setTimeout","res","json","data","hits","Button","Loader","MODAL_ROOT","document","querySelector","Modal","backdropRef","createRef","handleKeyPress","console","log","code","onClose","handleBackdropClick","current","window","addEventListener","removeEventListener","children","createPortal","Overlay","ref","role","App","error","isLoading","isModalOpen","largeImageId","largeImage","onSearch","fetchImagesWithScroll","scroll","imagesApi","catch","finally","firstLoadedImage","y","getElementById","getBoundingClientRect","top","scrollY","scrollTo","behavior","findPic","find","Number","currentTarget","closeModal","prevProps","prevState","length","largeImageURL","defaultProps","ReactDOM","render"],"mappings":"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","file":"static/js/main.311b547f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1K2DN\",\"SearchForm\":\"Searchbar_SearchForm__oR6Lk\",\"SearchFormButton\":\"Searchbar_SearchFormButton__2lAW7\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__2UmbY\",\"SearchFormInput\":\"Searchbar_SearchFormInput__96Raz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__A68J8\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__3hrSB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2od0E\",\"Modal\":\"Modal_Modal__112Ov\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__2rYl3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3TSd7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3_Ply\"};","import React, { Component } from 'react';\nimport s from './Searchbar.module.css';\n\nexport default class Searchbar extends Component {\n  state = { search: '' };\n\n  handleChange = e => {\n    this.setState({ search: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state.search);\n    this.setState({ search: '' });\n  };\n\n  render() {\n    return (\n      <header className={s.Searchbar}>\n        <form onSubmit={this.handleSubmit} className={s.SearchForm}>\n          <button type=\"submit\" className={s.SearchFormButton}>\n            <span className={s.SearchFormButtonLabel}>Search</span>\n          </button>\n\n          <input\n            className={s.SearchFormInput}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search...\"\n            value={this.state.search}\n            name=\"search\"\n            onChange={this.handleChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n","import React from 'react';\nimport T from 'prop-types';\nimport s from './ImageGalleryItem.module.css';\n\nconst ImageGalleryItem = ({ image, openModal }) => {\n  const { webformatURL, tags } = image;\n\n  return (\n    <li id={image.id} onClick={openModal} className={s.ImageGalleryItem}>\n      <img\n        src={webformatURL}\n        alt={tags}\n        className={s.ImageGalleryItemImage}\n      />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  image: T.shape({\n    webformatURL: T.string,\n  }),\n};\n\nexport default ImageGalleryItem;\n","import React from 'react';\nimport ImageGalleryItem from '../ImageGalleryItem/';\nimport s from './ImageGallery.module.css';\n\nconst ImageGallery = ({ images, openModal }) => {\n  return (\n    <ul className={s.ImageGallery}>\n      {images.map(image => (\n        <ImageGalleryItem openModal={openModal} key={image.id} image={image} />\n      ))}\n    </ul>\n  );\n};\n\nexport default ImageGallery;\n","export const fetchImages = (query = '', pageNumber = 1) => {\n  return fetch(\n    `https://pixabay.com/api/?q=${query}&page=${pageNumber}&key=20300449-ccc28e6e1b766fb7038aab942&image_type=photo&orientation=horizontal&per_page=12`,\n  )\n    .then(x => new Promise(resolve => setTimeout(() => resolve(x), 2000))) \n    .then(res => res.json())\n    .then(data => data.hits);\n};\n\nexport { fetchImages as default };\n","import React from 'react';\nimport s from './Button.module.css';\n\nconst Button = ({ fetchImages }) => (\n  <button type=\"button\" className={s.Button} onClick={fetchImages}>\n    Load more...\n  </button>\n);\n\nexport default Button;\n","import React from 'react';\n\nconst Loader = () => <div>Loading...</div>;\n\nexport default Loader;\n","import React, { Component, createRef } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport s from './Modal.module.css';\n\nconst MODAL_ROOT = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n  static propTypes = {\n    onClose: PropTypes.func.isRequired,\n    children: PropTypes.node.isRequired,\n  };\n\n  backdropRef = createRef();\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyPress);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyPress);\n  }\n\n  handleKeyPress = e => {\n    console.log(e);\n\n    if (e.code !== 'Escape') {\n      return;\n    }\n\n    this.props.onClose();\n  };\n\n  handleBackdropClick = e => {\n    if (this.backdropRef.current && e.target !== this.backdropRef.current) {\n      return;\n    }\n\n    this.props.onClose();\n  };\n\n  render() {\n    const { children } = this.props;\n    return createPortal(\n      <div\n        className={s.Overlay}\n        ref={this.backdropRef}\n        onClick={this.props.onClose}\n        role=\"presentation\"\n      >\n        <div className={s.Modal}>{children}</div>\n      </div>,\n      MODAL_ROOT,\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Searchbar from '../Searchbar';\nimport ImageGallery from '../ImageGallery';\nimport * as imagesApi from '../../services/images-api';\nimport Button from '../Button';\nimport Loader from '../Loader';\nimport Modal from '../Modal';\nimport s from '../App/App.module.css';\n\nexport default class App extends Component {\n  static defaultProps = {};\n\n  static propTypes = {};\n\n  state = {\n    images: [],\n    pageNumber: 1,\n    search: '',\n    error: '',\n    isLoading: false,\n    isModalOpen: false,\n    largeImageId: null,\n    largeImage: [],\n  };\n\n  componentDidMount() {}\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.search !== this.state.search) {\n      this.fetchImages(false);\n    }\n  }\n\n  onSearch = search => {\n    this.setState({ search, images: [], pageNumber: 1 });\n  };\n\n  fetchImagesWithScroll = () => {\n    this.fetchImages(true);\n  };\n\n  fetchImages = scroll => {\n    this.setState({ isLoading: true });\n    const { search, pageNumber } = this.state;\n    imagesApi\n      .fetchImages(search, pageNumber)\n      .then(images => {\n        this.setState(state => ({\n          images: [...state.images, ...images],\n          pageNumber: state.pageNumber + 1,\n        }));\n        return images[0];\n      })\n      .catch(error => {\n        this.setState({ error });\n      })\n      .finally(() => {\n        this.setState({ isLoading: false });\n      })\n      .then(firstLoadedImage => {\n        if (scroll) {\n          const { id } = firstLoadedImage;\n\n          const y =\n            document.getElementById(id).getBoundingClientRect().top +\n            window.scrollY -\n            80;\n          window.scrollTo({\n            top: y,\n            behavior: 'smooth',\n          });\n        }\n      });\n  };\n\n  findPic = () => {\n    const largeImg = this.state.images.find(image => {\n      return image.id === this.state.largeImageId;\n    });\n    return largeImg;\n  };\n\n  openModal = e => {\n    this.setState({\n      isModalOpen: true,\n      largeImageId: Number(e.currentTarget.id),\n    });\n  };\n  closeModal = () => this.setState({ isModalOpen: false });\n\n  render() {\n    const { isLoading, images, isModalOpen, largeImageId } = this.state;\n\n    return (\n      <div className={s.App}>\n        <Searchbar onSubmit={this.onSearch} />\n        <ImageGallery openModal={this.openModal} images={images} />\n        {isLoading && <Loader />}\n        {images.length > 0 && (\n          <Button fetchImages={this.fetchImagesWithScroll} />\n        )}\n        {isModalOpen && (\n          <Modal largeImageId={largeImageId} onClose={this.closeModal}>\n            <img src={this.findPic().largeImageURL} alt={this.findPic().tags} />\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport './styles.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}